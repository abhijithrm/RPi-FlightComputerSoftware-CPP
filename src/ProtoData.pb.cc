// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoData.proto

#include "ProtoData.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_ProtoData_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ProtoData_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DataPoint;
}  // namespace protobuf_ProtoData_2eproto
class CommandDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Command>
      _instance;
} _Command_default_instance_;
class DroneDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DroneData>
      _instance;
} _DroneData_default_instance_;
class DataPointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataPoint>
      _instance;
} _DataPoint_default_instance_;
class MissionDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MissionData>
      _instance;
} _MissionData_default_instance_;
namespace protobuf_ProtoData_2eproto {
static void InitDefaultsCommand() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Command_default_instance_;
    new (ptr) ::Command();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Command::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Command =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCommand}, {}};

static void InitDefaultsDroneData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DroneData_default_instance_;
    new (ptr) ::DroneData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DroneData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DroneData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDroneData}, {}};

static void InitDefaultsDataPoint() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DataPoint_default_instance_;
    new (ptr) ::DataPoint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DataPoint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DataPoint =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDataPoint}, {}};

static void InitDefaultsMissionData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MissionData_default_instance_;
    new (ptr) ::MissionData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MissionData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MissionData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMissionData}, {
      &protobuf_ProtoData_2eproto::scc_info_DataPoint.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Command.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DroneData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DataPoint.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MissionData.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Command, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Command, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Command, payload_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DroneData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DroneData, altitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DroneData, latitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DroneData, longitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DroneData, voltage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DroneData, speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DroneData, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DroneData, video_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DroneData, drone_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataPoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataPoint, latitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataPoint, longitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataPoint, altitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataPoint, speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataPoint, action_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MissionData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MissionData, point_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Command)},
  { 7, -1, sizeof(::DroneData)},
  { 20, -1, sizeof(::DataPoint)},
  { 30, -1, sizeof(::MissionData)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Command_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DroneData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DataPoint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MissionData_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "ProtoData.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017ProtoData.proto\"(\n\007Command\022\014\n\004code\030\001 \001"
      "(\005\022\017\n\007payload\030\002 \001(\014\"\227\001\n\tDroneData\022\020\n\010alt"
      "itude\030\001 \001(\002\022\020\n\010latitude\030\002 \001(\001\022\021\n\tlongitu"
      "de\030\003 \001(\001\022\017\n\007voltage\030\004 \001(\002\022\r\n\005speed\030\005 \001(\002"
      "\022\r\n\005state\030\006 \001(\t\022\022\n\nvideo_port\030\007 \001(\005\022\020\n\010d"
      "rone_id\030\010 \001(\t\"a\n\tDataPoint\022\020\n\010latitude\030\001"
      " \001(\t\022\021\n\tlongitude\030\002 \001(\t\022\020\n\010altitude\030\003 \001("
      "\002\022\r\n\005speed\030\004 \001(\002\022\016\n\006action\030\005 \001(\005\"(\n\013Miss"
      "ionData\022\031\n\005point\030\001 \003(\0132\n.DataPointb\006prot"
      "o3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 362);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoData.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ProtoData_2eproto

// ===================================================================

void Command::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Command::kCodeFieldNumber;
const int Command::kPayloadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Command::Command()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ProtoData_2eproto::scc_info_Command.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Command)
}
Command::Command(const Command& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.payload().size() > 0) {
    payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:Command)
}

void Command::SharedCtor() {
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

Command::~Command() {
  // @@protoc_insertion_point(destructor:Command)
  SharedDtor();
}

void Command::SharedDtor() {
  payload_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Command::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Command::descriptor() {
  ::protobuf_ProtoData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Command& Command::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ProtoData_2eproto::scc_info_Command.base);
  return *internal_default_instance();
}


void Command::Clear() {
// @@protoc_insertion_point(message_clear_start:Command)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _internal_metadata_.Clear();
}

bool Command::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Command)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes payload = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_payload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Command)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Command)
  return false;
#undef DO_
}

void Command::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Command)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // bytes payload = 2;
  if (this->payload().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->payload(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Command)
}

::google::protobuf::uint8* Command::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Command)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // bytes payload = 2;
  if (this->payload().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->payload(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Command)
  return target;
}

size_t Command::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Command)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes payload = 2;
  if (this->payload().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->payload());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Command::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Command)
  GOOGLE_DCHECK_NE(&from, this);
  const Command* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Command>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Command)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Command)
    MergeFrom(*source);
  }
}

void Command::MergeFrom(const Command& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Command)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.payload().size() > 0) {

    payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void Command::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Command)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Command::CopyFrom(const Command& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Command)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Command::IsInitialized() const {
  return true;
}

void Command::Swap(Command* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Command::InternalSwap(Command* other) {
  using std::swap;
  payload_.Swap(&other->payload_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Command::GetMetadata() const {
  protobuf_ProtoData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DroneData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DroneData::kAltitudeFieldNumber;
const int DroneData::kLatitudeFieldNumber;
const int DroneData::kLongitudeFieldNumber;
const int DroneData::kVoltageFieldNumber;
const int DroneData::kSpeedFieldNumber;
const int DroneData::kStateFieldNumber;
const int DroneData::kVideoPortFieldNumber;
const int DroneData::kDroneIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DroneData::DroneData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ProtoData_2eproto::scc_info_DroneData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DroneData)
}
DroneData::DroneData(const DroneData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.state().size() > 0) {
    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  drone_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.drone_id().size() > 0) {
    drone_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.drone_id_);
  }
  ::memcpy(&latitude_, &from.latitude_,
    static_cast<size_t>(reinterpret_cast<char*>(&video_port_) -
    reinterpret_cast<char*>(&latitude_)) + sizeof(video_port_));
  // @@protoc_insertion_point(copy_constructor:DroneData)
}

void DroneData::SharedCtor() {
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  drone_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&latitude_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&video_port_) -
      reinterpret_cast<char*>(&latitude_)) + sizeof(video_port_));
}

DroneData::~DroneData() {
  // @@protoc_insertion_point(destructor:DroneData)
  SharedDtor();
}

void DroneData::SharedDtor() {
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  drone_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DroneData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DroneData::descriptor() {
  ::protobuf_ProtoData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DroneData& DroneData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ProtoData_2eproto::scc_info_DroneData.base);
  return *internal_default_instance();
}


void DroneData::Clear() {
// @@protoc_insertion_point(message_clear_start:DroneData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  drone_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&latitude_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&video_port_) -
      reinterpret_cast<char*>(&latitude_)) + sizeof(video_port_));
  _internal_metadata_.Clear();
}

bool DroneData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DroneData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float altitude = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &altitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double latitude = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double longitude = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float voltage = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &voltage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float speed = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string state = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_state()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->state().data(), static_cast<int>(this->state().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DroneData.state"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 video_port = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &video_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string drone_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_drone_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->drone_id().data(), static_cast<int>(this->drone_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DroneData.drone_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DroneData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DroneData)
  return false;
#undef DO_
}

void DroneData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DroneData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float altitude = 1;
  if (this->altitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->altitude(), output);
  }

  // double latitude = 2;
  if (this->latitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->latitude(), output);
  }

  // double longitude = 3;
  if (this->longitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->longitude(), output);
  }

  // float voltage = 4;
  if (this->voltage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->voltage(), output);
  }

  // float speed = 5;
  if (this->speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->speed(), output);
  }

  // string state = 6;
  if (this->state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->state().data(), static_cast<int>(this->state().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DroneData.state");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->state(), output);
  }

  // int32 video_port = 7;
  if (this->video_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->video_port(), output);
  }

  // string drone_id = 8;
  if (this->drone_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->drone_id().data(), static_cast<int>(this->drone_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DroneData.drone_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->drone_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DroneData)
}

::google::protobuf::uint8* DroneData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DroneData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float altitude = 1;
  if (this->altitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->altitude(), target);
  }

  // double latitude = 2;
  if (this->latitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->latitude(), target);
  }

  // double longitude = 3;
  if (this->longitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->longitude(), target);
  }

  // float voltage = 4;
  if (this->voltage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->voltage(), target);
  }

  // float speed = 5;
  if (this->speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->speed(), target);
  }

  // string state = 6;
  if (this->state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->state().data(), static_cast<int>(this->state().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DroneData.state");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->state(), target);
  }

  // int32 video_port = 7;
  if (this->video_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->video_port(), target);
  }

  // string drone_id = 8;
  if (this->drone_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->drone_id().data(), static_cast<int>(this->drone_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DroneData.drone_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->drone_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DroneData)
  return target;
}

size_t DroneData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DroneData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string state = 6;
  if (this->state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->state());
  }

  // string drone_id = 8;
  if (this->drone_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->drone_id());
  }

  // double latitude = 2;
  if (this->latitude() != 0) {
    total_size += 1 + 8;
  }

  // float altitude = 1;
  if (this->altitude() != 0) {
    total_size += 1 + 4;
  }

  // float voltage = 4;
  if (this->voltage() != 0) {
    total_size += 1 + 4;
  }

  // double longitude = 3;
  if (this->longitude() != 0) {
    total_size += 1 + 8;
  }

  // float speed = 5;
  if (this->speed() != 0) {
    total_size += 1 + 4;
  }

  // int32 video_port = 7;
  if (this->video_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->video_port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DroneData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DroneData)
  GOOGLE_DCHECK_NE(&from, this);
  const DroneData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DroneData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DroneData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DroneData)
    MergeFrom(*source);
  }
}

void DroneData::MergeFrom(const DroneData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DroneData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state().size() > 0) {

    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  if (from.drone_id().size() > 0) {

    drone_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.drone_id_);
  }
  if (from.latitude() != 0) {
    set_latitude(from.latitude());
  }
  if (from.altitude() != 0) {
    set_altitude(from.altitude());
  }
  if (from.voltage() != 0) {
    set_voltage(from.voltage());
  }
  if (from.longitude() != 0) {
    set_longitude(from.longitude());
  }
  if (from.speed() != 0) {
    set_speed(from.speed());
  }
  if (from.video_port() != 0) {
    set_video_port(from.video_port());
  }
}

void DroneData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DroneData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DroneData::CopyFrom(const DroneData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DroneData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DroneData::IsInitialized() const {
  return true;
}

void DroneData::Swap(DroneData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DroneData::InternalSwap(DroneData* other) {
  using std::swap;
  state_.Swap(&other->state_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  drone_id_.Swap(&other->drone_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(latitude_, other->latitude_);
  swap(altitude_, other->altitude_);
  swap(voltage_, other->voltage_);
  swap(longitude_, other->longitude_);
  swap(speed_, other->speed_);
  swap(video_port_, other->video_port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DroneData::GetMetadata() const {
  protobuf_ProtoData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataPoint::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataPoint::kLatitudeFieldNumber;
const int DataPoint::kLongitudeFieldNumber;
const int DataPoint::kAltitudeFieldNumber;
const int DataPoint::kSpeedFieldNumber;
const int DataPoint::kActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataPoint::DataPoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ProtoData_2eproto::scc_info_DataPoint.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataPoint)
}
DataPoint::DataPoint(const DataPoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  latitude_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.latitude().size() > 0) {
    latitude_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.latitude_);
  }
  longitude_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.longitude().size() > 0) {
    longitude_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.longitude_);
  }
  ::memcpy(&altitude_, &from.altitude_,
    static_cast<size_t>(reinterpret_cast<char*>(&action_) -
    reinterpret_cast<char*>(&altitude_)) + sizeof(action_));
  // @@protoc_insertion_point(copy_constructor:DataPoint)
}

void DataPoint::SharedCtor() {
  latitude_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  longitude_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&altitude_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&action_) -
      reinterpret_cast<char*>(&altitude_)) + sizeof(action_));
}

DataPoint::~DataPoint() {
  // @@protoc_insertion_point(destructor:DataPoint)
  SharedDtor();
}

void DataPoint::SharedDtor() {
  latitude_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  longitude_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DataPoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DataPoint::descriptor() {
  ::protobuf_ProtoData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataPoint& DataPoint::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ProtoData_2eproto::scc_info_DataPoint.base);
  return *internal_default_instance();
}


void DataPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:DataPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  latitude_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  longitude_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&altitude_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&action_) -
      reinterpret_cast<char*>(&altitude_)) + sizeof(action_));
  _internal_metadata_.Clear();
}

bool DataPoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataPoint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string latitude = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_latitude()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->latitude().data(), static_cast<int>(this->latitude().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DataPoint.latitude"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string longitude = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_longitude()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->longitude().data(), static_cast<int>(this->longitude().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DataPoint.longitude"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float altitude = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &altitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float speed = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 action = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &action_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataPoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataPoint)
  return false;
#undef DO_
}

void DataPoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string latitude = 1;
  if (this->latitude().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->latitude().data(), static_cast<int>(this->latitude().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataPoint.latitude");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->latitude(), output);
  }

  // string longitude = 2;
  if (this->longitude().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->longitude().data(), static_cast<int>(this->longitude().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataPoint.longitude");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->longitude(), output);
  }

  // float altitude = 3;
  if (this->altitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->altitude(), output);
  }

  // float speed = 4;
  if (this->speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->speed(), output);
  }

  // int32 action = 5;
  if (this->action() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->action(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DataPoint)
}

::google::protobuf::uint8* DataPoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DataPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string latitude = 1;
  if (this->latitude().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->latitude().data(), static_cast<int>(this->latitude().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataPoint.latitude");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->latitude(), target);
  }

  // string longitude = 2;
  if (this->longitude().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->longitude().data(), static_cast<int>(this->longitude().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataPoint.longitude");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->longitude(), target);
  }

  // float altitude = 3;
  if (this->altitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->altitude(), target);
  }

  // float speed = 4;
  if (this->speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->speed(), target);
  }

  // int32 action = 5;
  if (this->action() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->action(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DataPoint)
  return target;
}

size_t DataPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DataPoint)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string latitude = 1;
  if (this->latitude().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->latitude());
  }

  // string longitude = 2;
  if (this->longitude().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->longitude());
  }

  // float altitude = 3;
  if (this->altitude() != 0) {
    total_size += 1 + 4;
  }

  // float speed = 4;
  if (this->speed() != 0) {
    total_size += 1 + 4;
  }

  // int32 action = 5;
  if (this->action() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->action());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataPoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataPoint)
  GOOGLE_DCHECK_NE(&from, this);
  const DataPoint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataPoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataPoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataPoint)
    MergeFrom(*source);
  }
}

void DataPoint::MergeFrom(const DataPoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataPoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.latitude().size() > 0) {

    latitude_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.latitude_);
  }
  if (from.longitude().size() > 0) {

    longitude_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.longitude_);
  }
  if (from.altitude() != 0) {
    set_altitude(from.altitude());
  }
  if (from.speed() != 0) {
    set_speed(from.speed());
  }
  if (from.action() != 0) {
    set_action(from.action());
  }
}

void DataPoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataPoint::CopyFrom(const DataPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataPoint::IsInitialized() const {
  return true;
}

void DataPoint::Swap(DataPoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataPoint::InternalSwap(DataPoint* other) {
  using std::swap;
  latitude_.Swap(&other->latitude_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  longitude_.Swap(&other->longitude_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(altitude_, other->altitude_);
  swap(speed_, other->speed_);
  swap(action_, other->action_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataPoint::GetMetadata() const {
  protobuf_ProtoData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MissionData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MissionData::kPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MissionData::MissionData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ProtoData_2eproto::scc_info_MissionData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MissionData)
}
MissionData::MissionData(const MissionData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      point_(from.point_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MissionData)
}

void MissionData::SharedCtor() {
}

MissionData::~MissionData() {
  // @@protoc_insertion_point(destructor:MissionData)
  SharedDtor();
}

void MissionData::SharedDtor() {
}

void MissionData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MissionData::descriptor() {
  ::protobuf_ProtoData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MissionData& MissionData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ProtoData_2eproto::scc_info_MissionData.base);
  return *internal_default_instance();
}


void MissionData::Clear() {
// @@protoc_insertion_point(message_clear_start:MissionData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  point_.Clear();
  _internal_metadata_.Clear();
}

bool MissionData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MissionData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DataPoint point = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MissionData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MissionData)
  return false;
#undef DO_
}

void MissionData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MissionData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DataPoint point = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->point_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->point(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MissionData)
}

::google::protobuf::uint8* MissionData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MissionData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DataPoint point = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->point_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->point(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MissionData)
  return target;
}

size_t MissionData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MissionData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .DataPoint point = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->point_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->point(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MissionData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MissionData)
  GOOGLE_DCHECK_NE(&from, this);
  const MissionData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MissionData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MissionData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MissionData)
    MergeFrom(*source);
  }
}

void MissionData::MergeFrom(const MissionData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MissionData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  point_.MergeFrom(from.point_);
}

void MissionData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MissionData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MissionData::CopyFrom(const MissionData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MissionData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MissionData::IsInitialized() const {
  return true;
}

void MissionData::Swap(MissionData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MissionData::InternalSwap(MissionData* other) {
  using std::swap;
  CastToBase(&point_)->InternalSwap(CastToBase(&other->point_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MissionData::GetMetadata() const {
  protobuf_ProtoData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Command* Arena::CreateMaybeMessage< ::Command >(Arena* arena) {
  return Arena::CreateInternal< ::Command >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DroneData* Arena::CreateMaybeMessage< ::DroneData >(Arena* arena) {
  return Arena::CreateInternal< ::DroneData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DataPoint* Arena::CreateMaybeMessage< ::DataPoint >(Arena* arena) {
  return Arena::CreateInternal< ::DataPoint >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MissionData* Arena::CreateMaybeMessage< ::MissionData >(Arena* arena) {
  return Arena::CreateInternal< ::MissionData >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
